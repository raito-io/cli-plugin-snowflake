name: Raito CLI - Snowflake Plugin - Build
on:
  push:
    branches:
      - "main"
  pull_request:
permissions:
  id-token: write
  contents: read
jobs:
  build:
    environment: testing
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Assume role using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_DEPLOY_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.22"
          cache: true

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Format terraform
        run: terraform fmt -check
        working-directory: .infra/infra

      - name: Terraform backed
        run: |
          cat <<EOF > .infra/infra/backend_override.tf             
          terraform {
            backend "s3" {
              bucket = ${AWS_S3_TERRAFORM_BUCKET}
              key    = format("cli-snowflake-plugin/%s/terraform.tfstate", var.environment)
              region = ${AWS_REGION}
              
              access_key = ${AWS_ACCESS_KEY_ID} var.aws_access_key
              secret_key = ${AWS_SECRET_ACCESS_KEY}
              token      = ${AWS_SESSION_TOKEN}
            }
          }
          EOF

        env:
          AWS_S3_TERRAFORM_BUCKET: ${{secrets.AWS_S3_TERRAFORM_BUCKET}}

      - name: Terraform init
        run: terraform init
        working-directory: .infra/infra

      - name: Mod Tidy
        run: go mod tidy

      - name: Build
        run: make build

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.56.1

      - name: Test
        run: make test
        env:
          SF_ACCOUNT: ${{ secrets.sf_account }}
          SF_USER: ${{ secrets.sf_user }}
          SF_PASSWORD: ${{ secrets.sf_password }}
          SF_ROLE: ${{ secrets.sf_role }}
          SF_STANDARD_EDITION: true

      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt
