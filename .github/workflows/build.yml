name: Raito CLI - Snowflake Plugin - Build
on:
  push:
    branches:
      - "main"
  pull_request:
permissions:
  id-token: write
  contents: read
jobs:
  build:
    environment: integration_testing
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Assume role using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_DEPLOY_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          check-latest: true
          cache: true

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Format terraform
        run: terraform fmt -check
        working-directory: .infra/infra

      - name: Terraform backend
        run: |
          cat <<EOF > .infra/infra/backend_override.tf
          terraform {
            backend "s3" {
            }
          }
          EOF

      - name: Terraform init
        run: | 
          terraform init \
            -backend-config=bucket=${AWS_S3_TERRAFORM_BUCKET} \
            -backend-config=key=${AWS_S3_TERRAFORM_KEY} \
            -backend-config=region=${AWS_REGION} \
            -backend-config=access_key=${AWS_ACCESS_KEY_ID} \
            -backend-config=secret_key=${AWS_SECRET_ACCESS_KEY} \
            -backend-config=token=${AWS_SESSION_TOKEN} \
        working-directory: .infra/infra
        env:
          AWS_S3_TERRAFORM_BUCKET: ${{ secrets.AWS_S3_TERRAFORM_BUCKET }}
          AWS_S3_TERRAFORM_KEY: ${{ secrets.AWS_S3_TERRAFORM_KEY }}

      - name: Mod Tidy
        run: go mod tidy

      - name: Build
        run: make build

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.56.1

      - name: Terraform apply
        run: make gen-test-infra
        env:
          TF_VAR_snowflake_account: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          TF_VAR_snowflake_user: ${{ secrets.SNOWFLAKE_USER }}
          TF_VAR_snowflake_password: ${{ secrets.SNOWFLAKE_PASSWORD }}


      - name: Generate usage
        run: make gen-test-usage

      - name: Test
        run: make test
        env:
          SF_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SF_USER: ${{ secrets.SNOWFLAKE_USER }}
          SF_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SF_ROLE: ${{ secrets.sf_role }}
          SF_STANDARD_EDITION: true

      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.txt

  cleanup:
    uses: raito-io/cli-plugin-snowflake/.github/workflows/destroy-infra.yml
    with:
      targetEnvironment: integration_testing
    secrets: inherit

