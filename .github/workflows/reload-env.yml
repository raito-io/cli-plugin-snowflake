name: Raito CLI - Snowflake Plugin - Reload
on:
  workflow_dispatch:
    inputs:
      targetEnvironment:
        type: string
        required: true
        description: ""
      secretArn:
        required: true
        type: string
        description: "The ARN of the secret to load"

permissions:
  id-token: write
  contents: read

jobs:
    load-secrets:
      name: Reload
      runs-on: ubuntu-latest
      steps:
      - name: Assume role using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_DEPLOY_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Load secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: ",${{ inputs.secretArn }}"

      - name: Generate output
        run: |
          echo "SNOWFLAKE_ACCOUNT=${SF_ACCOUNT}" >> $GITHUB_OUTPUT
          echo "SNOWFLAKE_USER=${SF_USER}" >> $GITHUB_OUTPUT
          echo "SNOWFLAKE_PASSWORD=${SF_PASSWORD}" >> $GITHUB_OUTPUT
          echo "SNOWFLAKE_ROLE=${SF_ROLE}" >> $GITHUB_OUTPUT
          echo "SNOWFLAKE_ORGANIZATION=${SNOWFLAKE_ORGANIZATION}" >> $GITHUB_OUTPUT
          echo "AWS_S3_TERRAFORM_BUCKET=${AWS_S3_TERRAFORM_BUCKET}" >> $GITHUB_OUTPUT
          echo "AWS_S3_TERRAFORM_KEY=${AWS_S3_TERRAFORM_KEY}" >> $GITHUB_OUTPUT

    destroy-old-infra:
      name: Destroy old infrastructure
      needs:
        - load-secrets
      uses: ./.github/workflows/destroy-roles.yml
      with:
        targetEnvironment: ${{ inputs.targetEnvironment }}
      secrets:
        SNOWFLAKE_ACCOUNT: ${{ needs.load-secrets.outputs.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ needs.load-secrets.outputs.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ needs.load-secrets.outputs.SNOWFLAKE_PASSWORD }}

    generate-new-infra:
      name: Generate new infrastructure
      needs:
        - destroy-old-infra
        - load-secrets
      uses: ./.github/workflows/generate-infra.yml
      with:
        targetEnvironment: ${{ inputs.targetEnvironment }}
        demo-infra: 'true'
        testing-infra: 'false'
      secrets:
        AWS_OIDC_DEPLOY_ROLE: ${{ secrets.AWS_OIDC_SHARED_SERVICES_ROLE }}
        AWS_REGION: ${{ vars.AWS_REGION }}
        AWS_S3_TERRAFORM_BUCKET: ${{ needs.load-secrets.outputs.AWS_S3_TERRAFORM_BUCKET }}
        AWS_S3_TERRAFORM_KEY: ${{ needs.load-secrets.outputs.AWS_S3_TERRAFORM_KEY }}
        SNOWFLAKE_ACCOUNT: ${{ needs.load-secrets.outputs.SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_ORGANIZATION: ${{ needs.load-secrets.outputs.SNOWFLAKE_ORGANIZATION }}
        SNOWFLAKE_USER: ${{ needs.load-secrets.outputs.SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ needs.load-secrets.outputs.SNOWFLAKE_PASSWORD }}




