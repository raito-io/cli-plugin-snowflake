// Code generated by "enumer -type=ModifiedObjectByDdlOperationType -json -transform=upper -trimprefix=ModifiedObjectByDdlOperationType"; DO NOT EDIT.

package common

import (
	"encoding/json"
	"fmt"
	"github.com/go-errors/errors"
	"strings"
)

const _ModifiedObjectByDdlOperationTypeName = "UNKNOWNALTERCREATEDROPREPLACEUNDROP"

var _ModifiedObjectByDdlOperationTypeIndex = [...]uint8{0, 7, 12, 18, 22, 29, 35}

const _ModifiedObjectByDdlOperationTypeLowerName = "unknownaltercreatedropreplaceundrop"

func (i ModifiedObjectByDdlOperationType) String() string {
	if i < 0 || i >= ModifiedObjectByDdlOperationType(len(_ModifiedObjectByDdlOperationTypeIndex)-1) {
		return fmt.Sprintf("ModifiedObjectByDdlOperationType(%d)", i)
	}
	return _ModifiedObjectByDdlOperationTypeName[_ModifiedObjectByDdlOperationTypeIndex[i]:_ModifiedObjectByDdlOperationTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ModifiedObjectByDdlOperationTypeNoOp() {
	var x [1]struct{}
	_ = x[ModifiedObjectByDdlOperationTypeUnknown-(0)]
	_ = x[ModifiedObjectByDdlOperationTypeAlter-(1)]
	_ = x[ModifiedObjectByDdlOperationTypeCreate-(2)]
	_ = x[ModifiedObjectByDdlOperationTypeDrop-(3)]
	_ = x[ModifiedObjectByDdlOperationTypeReplace-(4)]
	_ = x[ModifiedObjectByDdlOperationTypeUndrop-(5)]
}

var _ModifiedObjectByDdlOperationTypeValues = []ModifiedObjectByDdlOperationType{ModifiedObjectByDdlOperationTypeUnknown, ModifiedObjectByDdlOperationTypeAlter, ModifiedObjectByDdlOperationTypeCreate, ModifiedObjectByDdlOperationTypeDrop, ModifiedObjectByDdlOperationTypeReplace, ModifiedObjectByDdlOperationTypeUndrop}

var _ModifiedObjectByDdlOperationTypeNameToValueMap = map[string]ModifiedObjectByDdlOperationType{
	_ModifiedObjectByDdlOperationTypeName[0:7]:        ModifiedObjectByDdlOperationTypeUnknown,
	_ModifiedObjectByDdlOperationTypeLowerName[0:7]:   ModifiedObjectByDdlOperationTypeUnknown,
	_ModifiedObjectByDdlOperationTypeName[7:12]:       ModifiedObjectByDdlOperationTypeAlter,
	_ModifiedObjectByDdlOperationTypeLowerName[7:12]:  ModifiedObjectByDdlOperationTypeAlter,
	_ModifiedObjectByDdlOperationTypeName[12:18]:      ModifiedObjectByDdlOperationTypeCreate,
	_ModifiedObjectByDdlOperationTypeLowerName[12:18]: ModifiedObjectByDdlOperationTypeCreate,
	_ModifiedObjectByDdlOperationTypeName[18:22]:      ModifiedObjectByDdlOperationTypeDrop,
	_ModifiedObjectByDdlOperationTypeLowerName[18:22]: ModifiedObjectByDdlOperationTypeDrop,
	_ModifiedObjectByDdlOperationTypeName[22:29]:      ModifiedObjectByDdlOperationTypeReplace,
	_ModifiedObjectByDdlOperationTypeLowerName[22:29]: ModifiedObjectByDdlOperationTypeReplace,
	_ModifiedObjectByDdlOperationTypeName[29:35]:      ModifiedObjectByDdlOperationTypeUndrop,
	_ModifiedObjectByDdlOperationTypeLowerName[29:35]: ModifiedObjectByDdlOperationTypeUndrop,
}

var _ModifiedObjectByDdlOperationTypeNames = []string{
	_ModifiedObjectByDdlOperationTypeName[0:7],
	_ModifiedObjectByDdlOperationTypeName[7:12],
	_ModifiedObjectByDdlOperationTypeName[12:18],
	_ModifiedObjectByDdlOperationTypeName[18:22],
	_ModifiedObjectByDdlOperationTypeName[22:29],
	_ModifiedObjectByDdlOperationTypeName[29:35],
}

// ModifiedObjectByDdlOperationTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ModifiedObjectByDdlOperationTypeString(s string) (ModifiedObjectByDdlOperationType, error) {
	if val, ok := _ModifiedObjectByDdlOperationTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ModifiedObjectByDdlOperationTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, errors.Errorf("%s does not belong to ModifiedObjectByDdlOperationType values", s)
}

// ModifiedObjectByDdlOperationTypeValues returns all values of the enum
func ModifiedObjectByDdlOperationTypeValues() []ModifiedObjectByDdlOperationType {
	return _ModifiedObjectByDdlOperationTypeValues
}

// ModifiedObjectByDdlOperationTypeStrings returns a slice of all String values of the enum
func ModifiedObjectByDdlOperationTypeStrings() []string {
	strs := make([]string, len(_ModifiedObjectByDdlOperationTypeNames))
	copy(strs, _ModifiedObjectByDdlOperationTypeNames)
	return strs
}

// IsAModifiedObjectByDdlOperationType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ModifiedObjectByDdlOperationType) IsAModifiedObjectByDdlOperationType() bool {
	for _, v := range _ModifiedObjectByDdlOperationTypeValues {
		if i == v {
			return true
		}
	}
	return false
}

// MarshalJSON implements the json.Marshaler interface for ModifiedObjectByDdlOperationType
func (i ModifiedObjectByDdlOperationType) MarshalJSON() ([]byte, error) {
	return json.Marshal(i.String())
}

// UnmarshalJSON implements the json.Unmarshaler interface for ModifiedObjectByDdlOperationType
func (i *ModifiedObjectByDdlOperationType) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return errors.Errorf("ModifiedObjectByDdlOperationType should be a string, got %s", data)
	}

	var err error
	*i, err = ModifiedObjectByDdlOperationTypeString(s)
	return err
}
